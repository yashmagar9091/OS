 prac_1 pass1 and pass2 of a two pass assembler

Program: pass1 
import java.util.*; import
java.io.*; class pass1 // class 
declaration
{ 
public static void main(String args[])throws Exception
{ 
int loc=0,loc1=0; 
int j=0,k,sym=0,lit=0,v=0,w=0; 
FileReader f1=new FileReader("In1.txt"); 
BufferedReader b1=new BufferedReader(f1); 
FileWriter f3=new FileWriter("symboltab.txt"); 
BufferedWriter b3=new BufferedWriter(f3); 
FileWriter f4=new FileWriter("intermediate.txt"); 
BufferedWriter b4=new BufferedWriter(f4); 
FileWriter f5=new FileWriter("literaltab.txt"); 
BufferedWriter b5=new BufferedWriter(f5); 
StringBuffer sb = new StringBuffer(); 
String s,s3,s4,tmp,sd,sl; //variable declaration 
String s1[]=new String[4]; //1-d 
String s2[]=new String[4]; //1-d
String s5[][]=new String[4][2]; //2-d
 
while((s=b1.readLine())!=null) 
{ int
flag=0; int
m=0; 
StringTokenizer st=new StringTokenizer(s); 
while(st.hasMoreTokens()) 
 { 
 s1[m]=st.nextToken(); //START 100
 m++; 
} 
 if(s1[1].equals("START")) //IF START OPCODE
 { b4.write("AD 01"); 
b4.write(" C "+s1[2]); 
loc=Integer.parseInt(s1[2]); 
b4.newLine(); } 
 else if(s1[1].equals("END")) 
 { 
 for(int i=1;i<=lit;i++) 
 { 
b4.write(loc+" "); 
b4.write("AD 02"); 
b4.write(" C "+i); 
loc=loc+1; 
b4.newLine(); 
 } 
} 
else 
{ 
 b4.write(loc+" "); //FOR READING SYMBOL IN CODE 
if(s1[0].equals("-")!=true) 
 { sym++; //1 
b3.write(" "+s1[0]); 
b3.write(" "+loc+" "); 
 } 
FileReader f2=new FileReader("op1.txt"); BufferedReader
b2=new BufferedReader(f2); 
while((sl=b2.readLine())!=null) 
{ j=0; 
StringTokenizer se=new StringTokenizer(sl); 
while(se.hasMoreTokens()) 
{ 
s2[j]=se.nextToken(); 
j++; } 
if(s1[1].equals(s2[0])==true) 
{ 
for(int a=1;a<3;a++) 
{ b4.write(" "); 
b4.write(" "+s2[a]); 
} } 
if(s1[2].equals(s2[0])==true) 
{ for(int
a=1;a<2;a++) { 
b4.write(" "); 
b4.write(" "+s2[a]); 
} 
} } 
if(s1[3].contains("=")) 
{ int i;flag=0; 
for( i=0;i<lit;i++) 
{ 
if(s5[i][1].equals(s1[3])) 
{flag=1; break;} } if(flag!=1) 
{ lit++; //1
s5[v][0]=Integer.toString(lit); 
s5[v][1]=s1[3]; v++; 
b5.newLine(); b5.write(" 
"+lit); b5.write(" "+s1[3]); 
b4.write(" "); b4.write(" "+"L 
"+lit); 
} else { b4.write(" "); 
b4.write(" "+"L "+s5[i][0]); 
} } 
else if((s1[3]).matches("[a-zA-Z]")) 
{ 
b4.write(" "+"S "+sym); 
} loc=loc+1; 
b4.newLine(); 
b4.newLine(); 
b3.newLine(); 
} } 
b4.close(); 
b3.close(); 
b5.close(); 
} 
} 
Pass2: 
import java.io.*; 
import java.util.*; 
class pass2 { 
public static void main(String args[])throws Exception
{ 
String s; 
String s1[]=new String[70]; 
String s2[]=new String[70]; 
String s3[]=new String[70]; 
FileWriter f1=new FileWriter("output3.txt"); 
BufferedWriter b1=new BufferedWriter(f1); 
FileReader f2=new FileReader("intermediate.txt"); 
BufferedReader b2=new BufferedReader(f2); 
FileReader f3=new FileReader("symboltab.txt"); 
BufferedReader b3=new BufferedReader(f3); 
FileReader f4=new FileReader("literaltab.txt"); 
BufferedReader b4=new BufferedReader(f4); 
int m=0; while((s=b2.readLine())!=null) 
//intermediate file
{ 
StringTokenizer st=new StringTokenizer(s); 
while(st.hasMoreTokens()) 
{ 
s1[m]=st.nextToken(); 
m++; } 
} int m1=0; while((s=b3.readLine())!=null) 
//symbol table
{ 
StringTokenizer st=new StringTokenizer(s); 
while(st.hasMoreTokens()) 
{ 
s2[m1]=st.nextToken(); 
m1++; } 
} int m2=0; while((s=b4.readLine())!=null) 
//literal table
{ 
StringTokenizer st=new StringTokenizer(s); 
while(st.hasMoreTokens()) 
{ 
s3[m2]=st.nextToken(); 
m2++; } 
} 
for(int i=0;i<m;i++) 
{ 
if("AD".equals(s1[i]) && "01".equals(s1[i+1])) 
{ 
b1.write(""); 
} 
if("R1".equals(s1[i])||"R2".equals(s1[i])||"R3".equals(s1[i])||"R4".equals(s1[ 
i])) { 
b1.write("\t"+s1[i]); b1.write(" 
"); 
} 
if("IS".equals(s1[i])) 
{ 
b1.write(s1[i-1]+"\t"); b1.write(s1[i+1]); 
} 
if("L".equals(s1[i])) 
{ 
for(int j=0;j<m2;j++) 
{ 
if(s1[i+1].equals(s3[j])) 
{ b1.write("\t"); 
b1.write(s3[j+2]+"\n"); 
} 
} } 
if("S".equals(s1[i])) 
{ 
for(int j=0;j<m1;j++) 
{ 
if(s1[i+1].equals(s2[j])) 
{ b1.write("\t"); 
b1.write(s2[j+2]+"\n"); 
} 
} } 
if("DL".equals(s1[i])&&"01".equals(s1[i+1])) 
{ 
b1.write(s1[i-1]+"\t"); b1.write("-
"+"\t"); b1.write("-"); b1.write("\t"); 
b1.write("00"+s1[i+3]+"\n"); 
} 
if(s1[i].equals("AD") && s1[i+1].equals("02")) 
{ 
b1.write(s1[i-1]+"\t"); 
b1.write("-"+"\t"); 
b1.write("-"); b1.write("\t"); 
b1.write("00"+s1[i+3]+"\n"); 
} } 
b1.close(); 
b2.close(); 
b3.close(); 
b4.close(); 
} 
}